{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","ReactDOM","render","document","getElementById"],"mappings":"mLAaeA,EAXD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAEbC,EAAQF,EAAQ,mBAAqB,UAE3C,OACI,wBAAQG,UAAWD,EAAOD,QAAWA,EAArC,SACKD,KCKEI,EATD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQJ,EAAV,EAAUA,QAAV,OACV,qBAAKE,UAAU,QAAf,SACKE,EAAQC,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,EAAD,CAAgBR,MAASO,EAAQN,QAAW,kBAAMA,EAAQO,KAA7CA,SC+CVC,EAlDF,WAAO,IAAD,EACaC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADrC,mBACVC,EADU,KACDC,EADC,OAEmBJ,mBAAS,GAF5B,mBAEVK,EAFU,KAEEC,EAFF,OAGaN,oBAAS,GAHtB,mBAGVO,EAHU,KAGDC,EAHC,KAIXC,ECRD,SAAyBd,GAW9B,IAVA,IAAMe,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IA8B3B,OACE,qCACE,6CACA,cAAC,EAAD,CAAOZ,QAASQ,EAAQE,GAAad,QA/BrB,SAACO,GACnB,IAAMmB,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAC7Cc,EAAUF,EAAaZ,GACvBV,EAAO,YAAOwB,GAEhBV,GAAUd,EAAQG,KAEtBH,EAAQG,GAAKkB,EACbZ,EAAW,GAAD,mBAAKa,GAAL,CAAmBtB,KAC7BW,EAAcW,EAAaN,QAC3BH,GAAYD,OAsBV,sBAAKd,UAAU,eAAf,UACE,gCACE,yCAfNU,EAAQP,KAAI,SAACwB,EAAOC,GAClB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACE,6BACE,wBAAQ9B,QAAS,kBATvBe,EADciB,EAUsBF,QARpCb,EAAWe,EAAO,IAAM,GAFX,IAACA,GAUR,SAAsCD,KAD/BD,SAeT,6BAAKZ,EAAS,WAAaA,EAAS,gBAAkBO,WE3C9DQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.23c762a7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square =({value, onClick}) => {\n\n    const style = value ? 'squares ${value}' : 'squares';\n    \n    return(\n        <button className={style} onClick = {onClick}>\n            {value}\n        </button>\n    )\n\n}\nexport default Square;","import React from \"react\";\n\nimport Square from \"./Square\"\n\nconst Board = ({squares,onClick}) => (\n    <div className=\"board\">\n        {squares.map((square,i) => (\n            <Square key={i} value = {square} onClick = {() => onClick(i)} />\n        ))}\n        \n    </div>\n);\n\nexport default Board;","import React, { useState } from \"react\";\nimport { calculateWinner } from \"../helper\";\nimport Board from \"./Board\";\n\nconst Game = () => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(history[stepNumber]);\n  const xO = xIsNext ? \"X\" : \"O\";\n\n  const handleClick = (i) => {\n    const historyPoint = history.slice(0, stepNumber + 1);\n    const current = historyPoint[stepNumber];\n    const squares = [...current];\n    // return if won or occupied\n    if (winner || squares[i]) return;\n    // select square\n    squares[i] = xO;\n    setHistory([...historyPoint, squares]);\n    setStepNumber(historyPoint.length);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  };\n\n  const renderMoves = () =>\n    history.map((_step, move) => {\n      const destination = move ? `Go to move #${move}` : \"Go to Start\";\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{destination}</button>\n        </li>\n      );\n    });\n\n  return (\n    <>\n      <h1>Tic Tac Toe</h1>\n      <Board squares={history[stepNumber]} onClick={handleClick} />\n      <div className=\"info-wrapper\">\n        <div>\n          <h3>History</h3>\n          {renderMoves()}\n        </div>\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\n      </div>\n    </>\n  );\n};\n\nexport default Game;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game';\n\nReactDOM.render(<Game/>,document.getElementById(\"root\"));\n"],"sourceRoot":""}