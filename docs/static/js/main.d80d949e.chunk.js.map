{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","ReactDOM","render","document","getElementById"],"mappings":"mLAaeA,EAXD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAEbC,EAAQF,EAAQ,mBAAqB,UAE3C,OACI,wBAAQG,UAAWD,EAAOD,QAAWA,EAArC,SACKD,KCKEI,EATD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQJ,EAAV,EAAUA,QAAV,OACV,qBAAKE,UAAU,QAAf,SACKE,EAAQC,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,EAAD,CAAgBR,MAASO,EAAQN,QAAW,kBAAMA,EAAQO,KAA7CA,SC+CVC,EAlDF,WAAO,IAAD,EACaC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADrC,mBACVC,EADU,KACDC,EADC,OAEmBJ,mBAAS,GAF5B,mBAEVK,EAFU,KAEEC,EAFF,OAGaN,oBAAS,GAHtB,mBAGVO,EAHU,KAGDC,EAHC,KAIXC,ECRD,SAAyBd,GAW9B,IAVA,IAAMe,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IA8B3B,OACE,qCACE,gEACA,cAAC,EAAD,CAAOZ,QAASQ,EAAQE,GAAad,QA/BrB,SAACO,GACnB,IAAMmB,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAC7Cc,EAAUF,EAAaZ,GACvBV,EAAO,YAAOwB,GAEhBV,GAAUd,EAAQG,KAEtBH,EAAQG,GAAKkB,EACbZ,EAAW,GAAD,mBAAKa,GAAL,CAAmBtB,KAC7BW,EAAcW,EAAaN,QAC3BH,GAAYD,OAsBV,sBAAKd,UAAU,eAAf,UACE,gCACE,yCAfNU,EAAQP,KAAI,SAACwB,EAAOC,GAClB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACE,6BACE,wBAAQ9B,QAAS,kBATvBe,EADciB,EAUsBF,QARpCb,EAAWe,EAAO,IAAM,GAFX,IAACA,GAUR,SAAsCD,KAD/BD,SAeT,6BAAKZ,EAAS,WAAaA,EAAS,gBAAkBO,WE3C9DQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.d80d949e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Square =({value, onClick}) => {\r\n\r\n    const style = value ? 'squares ${value}' : 'squares';\r\n    \r\n    return(\r\n        <button className={style} onClick = {onClick}>\r\n            {value}\r\n        </button>\r\n    )\r\n\r\n}\r\nexport default Square;","import React from \"react\";\r\n\r\nimport Square from \"./Square\"\r\n\r\nconst Board = ({squares,onClick}) => (\r\n    <div className=\"board\">\r\n        {squares.map((square,i) => (\r\n            <Square key={i} value = {square} onClick = {() => onClick(i)} />\r\n        ))}\r\n        \r\n    </div>\r\n);\r\n\r\nexport default Board;","import React, { useState } from \"react\";\r\nimport { calculateWinner } from \"../helper\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(history[stepNumber]);\r\n  const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n  const handleClick = (i) => {\r\n    const historyPoint = history.slice(0, stepNumber + 1);\r\n    const current = historyPoint[stepNumber];\r\n    const squares = [...current];\r\n    // return if won or occupied\r\n    if (winner || squares[i]) return;\r\n    // select square\r\n    squares[i] = xO;\r\n    setHistory([...historyPoint, squares]);\r\n    setStepNumber(historyPoint.length);\r\n    setXisNext(!xIsNext);\r\n  };\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXisNext(step % 2 === 0);\r\n  };\r\n\r\n  const renderMoves = () =>\r\n    history.map((_step, move) => {\r\n      const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{destination}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <h1>React Tic Tac Toe - With Hooks</h1>\r\n      <Board squares={history[stepNumber]} onClick={handleClick} />\r\n      <div className=\"info-wrapper\">\r\n        <div>\r\n          <h3>History</h3>\r\n          {renderMoves()}\r\n        </div>\r\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game';\n\nReactDOM.render(<Game/>,document.getElementById(\"root\"));\n"],"sourceRoot":""}